/*
 *  Project name: Biometrija_Klika_DIPLOMSKI/WekaExporter.java
 *  Author & email: Mirza Suljić <mirza.suljic.ba@gmail.com>
 *  Date & time: Apr 11, 2016
 */
package export;

import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import trainer.Engine;
import trainer.Profile;

/**
 *
 * @author Mirza Suljić <mirza.suljic.ba@gmail.com>
 */
public class WekaExporter extends javax.swing.JFrame {

    private final Engine engine = new Engine();
    private Profile selectedProfile;
    List<Profile> allProfiles;

    /**
     * Creates new form WekaExporter
     */
    public WekaExporter() {
        initComponents();
        setLocationRelativeTo(null);
        ListModel listModel = allProfiles_LI.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveAuth_B = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        allProfiles_LI = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        saveIdent_B = new javax.swing.JButton();
        directory_L = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        file_M = new javax.swing.JMenu();
        selectDirectory_MI = new javax.swing.JMenuItem();
        refreshList_MI = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Weka Export");
        setAlwaysOnTop(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setResizable(false);

        saveAuth_B.setText("Save authentification file...");
        saveAuth_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAuth_BActionPerformed(evt);
            }
        });

        allProfiles_LI.setToolTipText("Use 'File\\Select Directory...' to locate profiles.");
        jScrollPane1.setViewportView(allProfiles_LI);

        jLabel3.setText("Select main profile:");

        saveIdent_B.setText("Save identification file...");
        saveIdent_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveIdent_BActionPerformed(evt);
            }
        });

        directory_L.setText("none");
        directory_L.setMaximumSize(new java.awt.Dimension(190, 14));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Directory:");

        file_M.setText("File");

        selectDirectory_MI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/load.gif"))); // NOI18N
        selectDirectory_MI.setText("Select directory...");
        selectDirectory_MI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDirectory_MIActionPerformed(evt);
            }
        });
        file_M.add(selectDirectory_MI);

        refreshList_MI.setText("Refresh list");
        refreshList_MI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshList_MIActionPerformed(evt);
            }
        });
        file_M.add(refreshList_MI);

        jMenuBar1.add(file_M);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(directory_L, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveIdent_B, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveAuth_B)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(directory_L, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveAuth_B)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveIdent_B)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectDirectory_MIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDirectory_MIActionPerformed
        try {
            allProfiles = engine.readProfileDirectory(directory_L);
            if (allProfiles.size() > 0) {
                allProfiles_LI.setListData(allProfiles.toArray());
            } else {
                JOptionPane.showMessageDialog(null,
                        "No profiles found!",
                        "Not found",
                        JOptionPane.WARNING_MESSAGE
                );
            }
        } catch (IOException ex) {
            Logger.getLogger(WekaExporter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_selectDirectory_MIActionPerformed

    private void saveAuth_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAuth_BActionPerformed
        selectedProfile = (Profile) allProfiles_LI.getSelectedValue();
        System.out.println("Selected: " + selectedProfile.getName());
        new Export().serializeWekaAuthentification(selectedProfile);
    }//GEN-LAST:event_saveAuth_BActionPerformed

    private void saveIdent_BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveIdent_BActionPerformed
        selectedProfile = (Profile) allProfiles_LI.getSelectedValue();
        System.out.println("Selected: " + selectedProfile.getName());
        new Export().serializeWekaIdenfication(selectedProfile);
    }//GEN-LAST:event_saveIdent_BActionPerformed

    private void refreshList_MIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshList_MIActionPerformed
        System.out.println("NOT IMPLEMENTED: LIST REFRESH");
    }//GEN-LAST:event_refreshList_MIActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WekaExporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WekaExporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WekaExporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WekaExporter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WekaExporter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList allProfiles_LI;
    private javax.swing.JLabel directory_L;
    private javax.swing.JMenu file_M;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem refreshList_MI;
    private javax.swing.JButton saveAuth_B;
    private javax.swing.JButton saveIdent_B;
    private javax.swing.JMenuItem selectDirectory_MI;
    // End of variables declaration//GEN-END:variables
}
